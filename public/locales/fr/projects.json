{
  "Kasa": {
    "description": "Application de location d'appartements",
    "context": "Ce projet était mon premier en React. Les données étaient fournies au format JSON.",
    "challenges": "Le défi du projet était de créer une application React multipage avec routage et d'utiliser l'ID de produit pour afficher les données correspondantes en fonction de l'URL. Plusieurs pages et composants utilisant des props et des React Hooks ont été créés."
  },
  "Sport See": {
    "description": "Tableau de bord d'analyse sportive",
    "context": "Le projet impliquait la création de la partie front-end et sa connexion à une API back-end fournie afin d'afficher les données sous forme de graphiques.",
    "challenges": "Les deux défis les plus importants de ce projet étaient de créer un service de données pour assurer la qualité des données et d'utiliser une bibliothèque externe pour créer des graphiques avancés. J'ai relevé le premier défi en maintenant la logique des données séparée de la logique de l'application. Le service de données gère toutes les requêtes de données à partir d'un seul endroit dans le code. À des fins de test, il est possible de basculer facilement vers des données mockées. J'ai abordé le deuxième défi en utilisant la bibliothèque Recharts. Pour gérer les styles de chaque graphique, j'ai utilisé le CSS module, permettant un fichier CSS séparé pour chaque composant."
  },
  "Argent Bank": {
    "description": "API d'authentification de l'utilisateur bancaire",
    "context": "Le projet impliquait la création de la partie front-end et sa liaison avec le back-end et la base de données fournis pour permettre l'authentification des utilisateurs et l'exécution d'actions au sein de l'application.",
    "challenges": "Ce projet nécessitait d'authentifier l'utilisateur à l'application, puis de l'autoriser à effectuer des modifications sur son profil. Cela a été réalisé grâce à des appels API utilisant une autorisation basée sur un token et l'outil de gestion d'état React-Redux (avec Redux Toolkit), permettant l'utilisation des données utilisateur dans toute l'application. J'ai également eu l'occasion de concevoir une API pour la partie transactions futures de l'application. J'ai utilisé la méthodologie Swagger pour y parvenir."
  },
  "Wealth Health": {
    "description": "Passage d'une librairie jQuery vers React",
    "context": "Réduction de la dette technique en changeant la technologie utilisée : de jQuery à React.",
    "challenges": "Mes principaux défis étaient de choisir et de mettre en œuvre des bibliothèques UI (React Bootstrap, TanStack Table, W3.CSS), puis d'exécuter l'application sur une version de build pour effectuer des tests de performance (Lighthouse). La deuxième partie du projet consistait à développer un composant React personnalisé et réutilisable en tant que projet distinct, à effectuer des tests de snapshot, à le déployer via Rollup, à le publier en tant que package npm avec la documentation nécessaire, puis à intégrer le package dans le projet d'origine."
  },
  "Mon Vieux Grimoire": {
    "description": "Projet back-end pour l'application des collections de livres et de notation",
    "context": "Le projet consistait à créer un back-end et à le relier à un front-end existant pour développer une application entièrement fonctionnelle. L'application permet aux utilisateurs de consulter, de créer, de supprimer et de noter des livres. Un document de spécification API, rédigé au préalable, a servi de base à la création de l'API.",
    "challenges": "Mon premier projet back-end nécessitait l'utilisation de diverses technologies de back-end. Le projet a été configuré sur Node.js en utilisant le framework Express. J'ai utilisé une base de données NoSQL hébergée sur le cloud, MongoDB, connectée à l'application via Mongoose. Les opérations CRUD depuis le front-end ont été implémentées sur le back-end en utilisant des modèles de données, des middleware, des contrôleurs et des routes. L'inscription et la connexion sécurisées ont été assurées grâce au chiffrement et à l'authentification par token."
  },
  "Splitter": {
    "description": "Application de calcul de pourboire",
    "context": "Ce projet est une solution au défi sur frontendmentor.io. Ces défis aident à améliorer les compétences en programmation en construisant des projets réalistes.",
    "challenges": "Le principal défi était d'effectuer toutes les calculs nécessaires via JavaScript. Le projet nécessitait également des manipulations sur les éléments de formulaire HTML, comme l'affichage de messages d'erreur en cas de saisie invalide ou le basculement des boutons de pourcentage de pourboire."
  },
  "Portfolio": {
    "description": "Mon site personnel",
    "context": "Après avoir terminé ma formation officielle en programmation, j'ai décidé de créer ce portfolio pour présenter mes travaux les plus significatifs et appliquer les connaissances que j'ai acquises.",
    "challenges": "L'aspect stimulant de ce projet, qui le distingue de mes autres projets, est le fait que j'étais celle qui créait tout le concept de la page : décider quelles fonctionnalités inclure, quelles technologies utiliser et quel devrait être le design de la page. De nombreuses décisions ont dû être prises : chaque description de projet devrait-elle s'ouvrir dans une nouvelle page/URL ou bien une simple fenêtre modale est-elle suffisante ? Quelle technologie serait la meilleure pour gérer une page multilingue ?"
  }
}
